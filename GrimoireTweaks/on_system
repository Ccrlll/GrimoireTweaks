#!/system/bin/sh

configure_cpu() {
    local governor=$1
    local policy=$2
    local down_rate=$3
    local freq=$4
    local up_rate=$5

    echo $governor > /sys/devices/system/cpu/cpufreq/policy${policy}/scaling_governor
    if [ "$governor" == "schedutil" ]; then
        for gov in /sys/devices/system/cpu/cpufreq/policy${policy}/schedutil/*; do
            case "$(basename $gov)" in
                down_rate_limit_us) echo $down_rate > $gov ;;
                hispeed_freq) echo $freq > $gov ;;
                up_rate_limit_us) echo $up_rate > $gov ;;
            esac
        done
    fi
}

configure_core() {
    local core=$1
    local enable=$2
    local max_cpus=$3
    local min_cpus=$4
    local busy_down_thres=$5
    local busy_up_thres=$6

    for param in /sys/devices/system/cpu/cpu${core}/core_ctl/*; do
        case "$(basename $param)" in
            enable) echo $enable > $param ;;
            max_cpus) echo $max_cpus > $param ;;
            min_cpus) echo $min_cpus > $param ;;
            busy_down_thres) echo $busy_down_thres > $param ;;
            busy_up_thres) echo $busy_up_thres > $param ;;
        esac
    done
}

configure_stune(){
    local name=$1
    local cpus=$2
    local boost=$3
    local colocate=$4
    local prefer_idle=$5
    local no_override=$6

    for stune in /dev/stune/${name}/*; do
        case "$(basename $stune)" in
            schedtune.boost) echo $boost > $stune ;;
            schedtune.colocate) echo $colocate > $stune ;;
            schedtune.prefer_idle) echo $prefer_idle > $stune ;;
            schedtune.sched_boost_no_override) echo $no_override > $stune ;;
        esac
    done
    echo $cpus > /dev/cpuset/${name}/cpus
}

configure_io() {
    local disk=$1
    local scheduler=$2
    local nr_requests=$3
    local read_ahead_kb=$4
    local add_random=0
    local iostats=0

    for io in /sys/block/${disk}/queue/*; do
        case "$(basename $io)" in
            scheduler) [ "$disk" != "zram0" ] && [ "$disk" != "dm-0" ] && echo $scheduler > $io ;;
            add_random) echo $add_random > $io ;;
            iostats) echo $iostats > $io ;;
            nr_requests) echo $nr_requests > $io ;;
            read_ahead_kb) echo $read_ahead_kb > $io ;;
        esac
    done      
}

sleep 25
configure_cpu "schedutil" 0 500 1036800 300
configure_cpu "schedutil" 4 500 1497600 700
configure_cpu "schedutil" 7 500 2016000 900
configure_core  0  1  4  0  10  10
configure_core  4  1  3  0  40  60
configure_core  7  1  1  0  90  90
configure_stune "background" "0-1" 0 1 1 0
configure_stune "camera-daemon" "0-7" 0 1 0 1
configure_stune "foreground" "2-7" 0 0 0 1
configure_stune "top-app" "0-7" 1 1 1 1
configure_io "mmcblk0" "noop" 256 512
configure_io "sda" "cfq" 128 256
configure_io "sdb" "cfq" 256 512
configure_io "sdc" "cfq" 128 256
configure_io "sdd" "cfq" 256 512
configure_io "sde" "cfq" 128 256
configure_io "sdf" "cfq" 256 512
configure_io "zram0" "" 256 512
configure_io "dm-0" "" 128 128

for virtual_mem in /proc/sys/vm
    do
        echo 100 > $virtual_mem/swappiness
        echo 10 > $virtual_mem/dirty_ratio
        echo 5 > $virtual_mem/dirty_background_ratio
        echo 1500 > $virtual_mem/dirty_writeback_centisecs
        echo 500 > $virtual_mem/dirty_expire_centisecs
        echo 100 > $virtual_mem/vfs_cache_pressure
done